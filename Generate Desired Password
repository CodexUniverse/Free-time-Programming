// Christian Otte
// 200434003
// 19/9/2020

#include "A1.h"
using namespace std;

int main()
{
    //unsigned variables to contain larger positive numbers.
    unsigned int k, n, m{}, a, rnd;
    string option[3]; //String array to hold the three alphabet lines.
    ifstream inputFile; ofstream outputFile;

    //opening both config file and passwords file (or creating if it doesn't exist).
    inputFile.open("alphabet.config");
    outputFile.open("passwords.txt");
    
    //For loop grabs the entire line of each alphabet placing them into a string array.
    for (int b = 0; b < 3; b++)
    {
        getline(inputFile, option[b]);
    }

    //User Input
    cout << "This program generates random passwords and stores them in file.\n"
         << "Please enter number of passwords to generate (k): ";
    cin >> k;
    cout << "Please Enter Password Length (n): ";
    cin >> n;
    cout << "Please choose the character alphabet option:\n"
         << "1. Lowercase English Characters + Digits.\n"
         << "2. Lowercase/Uppercase English Characters + Digits.\n"
         << "3. Lowercase/Uppercase English Characters, Digits + Extra Characters.\n";
    cin >> a;
    switch (a) //Switch-case statement for finding out the required calculation for how many characters there are. defaulted at 36 if a different number is entered.
    {
    case 1: m = 36; break;
    case 2: m = 62; break;
    case 3: m = 82; break;
    default: m = 36; break;
    }

    //Displaying configuration possible password combinations in scientific notation.
    cout << "Reading alphabet.config ..."
         << "This configuration has a total of " << m << "^" << n << " or " << scientific << pow(m, n)
         << " possible password combinations.\n";

    //Display and output for the passwords
    cout << "The generated passwords are:\n";
    for (int i = 0; i < k; i++) //For loop that controls how many passwords are created.
    {
        for (int j = 0; j < n; j++) //For loop that creates the password to its desired length.
        {
            rnd = rnd_num(0, m-1); //Calling on the random num generator to generate a number within the string's character array.
            //Printing and outputing the results.
            cout << option[a-1][rnd]; 
            outputFile << option[a-1][rnd];
        }
        //Extra outputs to indent to the next line.
        cout << "\n";
        outputFile << "\n";
    }
}
